server.port= 8080

spring.http.encoding.charset=UTF-8
spring.http.encoding.force-response=true

spring.thymeleaf.cache=false
#spring.thymeleaf.mode=LEGACYHTML5

#数据源配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

#druid连接池配置
spring.datasource.druid.url=jdbc:mysql://127.0.0.1:3306/courses?useSSL=true&zeroDateTimeBehavior=convertToNull
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.username=root
spring.datasource.druid.password=admin
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=2
spring.datasource.druid.min-idle=2
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
#检测连接是否有效的sql
spring.datasource.druid.validation-query=SELECT 'x'
spring.datasource.druid.validation-query-timeout=60000
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# PSCache Mysql下建议关闭
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j

# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
#启动项目后访问 http://127.0.0.1:8080/druid
#是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
#缺省sessionStatMaxCount是1000个
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
#关闭session统计功能
spring.datasource.druid.web-stat-filter.session-stat-enable=false
#配置principalSessionName，使得druid能够知道当前的session的用户是谁
#如果你session中保存的是非string类型的对象，需要重载toString方法
spring.datasource.druid.web-stat-filter.principalSessionName=xxx.user
#如果user信息保存在cookie中，你可以配置principalCookieName，使得druid知道当前的user是谁
spring.datasource.druid.web-stat-filter.principalCookieName=xxx.user
#druid 0.2.7版本开始支持profile，配置profileEnable能够监控单个url调用的sql列表。
spring.datasource.druid.web-stat-filter.profile-enable=false


# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#启动项目后访问 http://127.0.0.1:8080/druid
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.urlPattern=/druid/*
#禁用HTML页面上的“Reset All”功能
spring.datasource.druid.stat-view-servlet.resetEnable=false
#用户名
spring.datasource.druid.stat-view-servlet.loginUsername=admin
#密码
spring.datasource.druid.stat-view-servlet.loginPassword=admin
#IP白名单(没有配置或者为空，则允许所有访问)
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,192.168.163.1
#IP黑名单 (存在共同时，deny优先于allow)
spring.datasource.druid.stat-view-servlet.deny=192.168.1.73

pic.location=F:/test/
net.path=http://pq7s45.natappfree.cc/

spring.http.multipart.max-file-size=30MB
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,\
  classpath:/static/,classpath:/public/,file:${pic.location}


#mybatis
mybatis-plus.mapper-locations=classpath:/mapper/*Mapper
#实体扫描，多个package用逗号或者分号分隔
mybatis-plus.type-aliases-package=com.hfut.glxy.entity,com.hfut.glxy.relation
#mybatis-plus.type-enums-package=
#主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
mybatis-plus.global-config.id-type=2
#字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
mybatis-plus.global-config.field-strategy=2
#驼峰下划线转换
mybatis-plus.global-config.db-column-underline=true
#刷新mapper 调试神器
mybatis-plus.global-config.refresh-mapper=true
#数据库大写下划线转换
#mybatis-plus.global-config.capital-mode=true
#序列接口实现类配置
#mybatis-plus.global-config.key-generator=com.
#逻辑删除配置
mybatis-plus.global-config.logic-delete-value=0
mybatis-plus.global-config.logic-not-delete-value=1
#自定义填充策略接口实现
#mybatis-plus.global-config.meta-object-handler=
#自定义SQL注入器
#mybatis-plus.global-config.sql-injector=
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.cache-enabled=false



# DEVTOOLS (DevToolsProperties)
# Enable a livereload.com compatible server.
spring.devtools.livereload.enabled=true
# Server port.
#spring.devtools.livereload.port=35729
# Additional patterns that should be excluded from triggering a full restart.
#spring.devtools.restart.additional-exclude=
# Additional paths to watch for changes.
#spring.devtools.restart.additional-paths=
# Enable automatic restart.
spring.devtools.restart.enabled=true
# Patterns that should be excluded from triggering a full restart.
#spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties
# Amount of time (in milliseconds) to wait between polling for classpath changes.
spring.devtools.restart.poll-interval=1000
# Amount of quiet time (in milliseconds) required without any classpath changes before a restart is triggered.
spring.devtools.restart.quiet-period=400
# Name of a specific file that when changed will trigger the restart check.
# If not specified any classpath file change will trigger the restart.
#spring.devtools.restart.trigger-file=

